name: preview-automerge

on:
  pull_request:
    types: [labeled, synchronize]

permissions:
  contents: write
  pull-requests: read

jobs:
  merge-branch-content:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'preview-target')
    steps:
      - name: Checkout target branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Find preview PRs
        id: find-prs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=open&labels=hiyoko/preview")

          # 検索結果からPR数を取得
          PR_COUNT=$(echo $RESPONSE | jq '. | length')

          if [ "$PR_COUNT" -eq "0" ]; then
            echo "No PRs with preview label found"
            exit 0
          fi

          echo "Found $PR_COUNT PRs with preview label"

          # すべてのプレビューPRのブランチ情報を抽出
          for i in $(seq 0 $(($PR_COUNT - 1))); do
            PR_NUMBER=$(echo $RESPONSE | jq -r ".[$i].number")
            PR_BRANCH=$(echo $RESPONSE | jq -r ".[$i].head.ref")
            PR_REPO=$(echo $RESPONSE | jq -r ".[$i].head.repo.clone_url")
            
            echo "PR #$PR_NUMBER uses branch: $PR_BRANCH from $PR_REPO"
            
            # リモートを追加してフェッチ
            REMOTE_NAME="preview-${PR_NUMBER}"
            git remote add $REMOTE_NAME $PR_REPO
            git fetch $REMOTE_NAME $PR_BRANCH
            
            # ブランチの内容をマージ (マージコミットを作成)
            echo "Merging content from PR #$PR_NUMBER (branch $PR_BRANCH)"
            if git merge --no-ff $REMOTE_NAME/$PR_BRANCH -m "Merge preview content from PR #$PR_NUMBER (branch $PR_BRANCH)"; then
              echo "✅ Successfully merged content from PR #$PR_NUMBER"
            else
              echo "❌ Failed to merge content from PR #$PR_NUMBER due to conflicts"
              # マージ競合をリセット
              git merge --abort
            fi
          done

          # 変更をプッシュ
          git push origin ${{ github.event.pull_request.base.ref }}
