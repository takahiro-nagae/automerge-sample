name: Merge Content to Preview Branches

on:
  pull_request:
    types: [labeled, synchronize]

permissions:
  contents: write
  pull-requests: write

jobs:
  merge-to-preview:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'preview-target')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config user.name "takahiro-nagae"
          git config user.email "tnagae627@gmail.com"

      - name: Find preview PRs and merge content
        run: |
          echo "Target branch: $TARGET_BRANCH (SHA: $TARGET_SHA)"

          # GitHub REST APIを使用して「preview」ラベルがついたすべてのPRを検索
          RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=open")

          # 検索結果からPR数を取得
          PR_COUNT=$(echo $RESPONSE | jq '. | length')

          if [ "$PR_COUNT" -eq "0" ]; then
            echo "No PRs with preview label found"
            exit 0
          fi

          # すべてのプレビューPRに対して処理
          for i in $(seq 0 $(($PR_COUNT - 1))); do
            PR_NUMBER=$(echo $RESPONSE | jq -r ".[$i].number")
            PREVIEW_BRANCH=$(echo $RESPONSE | jq -r ".[$i].head.ref")

            LABELS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/labels")
            
            if ! echo $LABELS | jq -e '.[] | select(.name == "hiyoko/preview")' > /dev/null; then
              echo "PR #$PR_NUMBER does not have hiyoko/preview label. Skipping."
              continue
            fi
            
            echo "Processing preview PR #$PR_NUMBER (branch: $PREVIEW_BRANCH)"
            
            # プレビューブランチをチェックアウト
            git fetch origin $PREVIEW_BRANCH
            git checkout $PREVIEW_BRANCH
            
            # preview-targetブランチの内容をマージ（直接コミットとして適用）
            echo "Applying changes from $TARGET_BRANCH to $PREVIEW_BRANCH"
            if git merge --no-ff origin/$TARGET_BRANCH -m "Apply preview-target changes from $TARGET_BRANCH"; then
              # 変更をプッシュ
              git push origin $PREVIEW_BRANCH
              echo "✅ Successfully applied changes to preview branch $PREVIEW_BRANCH"
              
              # PRにコメントを追加
              curl -s -X POST \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" \
                -d "{\"body\":\"✅ Preview updated with changes from branch \`$TARGET_BRANCH\` (SHA: $TARGET_SHA)\"}"
            else
              echo "❌ Failed to apply changes due to conflicts"
              git merge --abort
              
              # PRにコメントを追加
              curl -s -X POST \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" \
                -d "{\"body\":\"❌ Failed to update preview with changes from \`$TARGET_BRANCH\` due to merge conflicts. Manual intervention required.\"}"
            fi
          done
