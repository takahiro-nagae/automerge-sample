name: auto-merge

on:
  pull_request:
    types: [labeled, synchronize]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-preview:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'preview-target')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Get target branch content
        env:
          TARGET_BRANCH: ${{ github.event.pull_request.head.ref }}
          TARGET_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          echo "Target branch: $TARGET_BRANCH (SHA: $TARGET_SHA)"

          # target-previewブランチの内容を取得
          git fetch origin $TARGET_BRANCH

          # 変更内容を一時ディレクトリに保存
          mkdir -p /tmp/target-changes
          git archive origin/$TARGET_BRANCH | tar -x -C /tmp/target-changes

          echo "Target branch content saved to /tmp/target-changes"

      - name: Find preview PRs and apply changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_BRANCH: ${{ github.event.pull_request.head.ref }}
          TARGET_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          # GitHub REST APIを使用して「preview」ラベルがついたすべてのPRを検索
          RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=open&labels=preview")

          # 検索結果からPR数を取得
          PR_COUNT=$(echo $RESPONSE | jq '. | length')

          if [ "$PR_COUNT" -eq "0" ]; then
            echo "No PRs with preview label found"
            exit 0
          fi

          echo "Found $PR_COUNT PRs with preview label"

          # すべてのプレビューPRに対して処理
          for i in $(seq 0 $(($PR_COUNT - 1))); do
            PR_NUMBER=$(echo $RESPONSE | jq -r ".[$i].number")
            PREVIEW_BRANCH=$(echo $RESPONSE | jq -r ".[$i].head.ref")
            
            echo "Processing preview PR #$PR_NUMBER (branch: $PREVIEW_BRANCH)"
            
            # プレビューブランチをチェックアウト
            git fetch origin $PREVIEW_BRANCH
            git checkout -B $PREVIEW_BRANCH origin/$PREVIEW_BRANCH
            
            # 現在のブランチの状態を保存
            CURRENT_SHA=$(git rev-parse HEAD)
            
            # 変更を適用（コピーして追加）
            echo "Applying changes from $TARGET_BRANCH to $PREVIEW_BRANCH"
            cp -r /tmp/target-changes/* ./
            
            # 変更があるか確認
            if git diff --quiet; then
              echo "No changes to apply"
              continue
            fi
            
            # 変更をコミット
            git add .
            git commit -m "Apply changes from $TARGET_BRANCH (SHA: $TARGET_SHA)"
            
            # 変更をプッシュ
            git push origin $PREVIEW_BRANCH
            
            echo "✅ Successfully applied changes to preview branch $PREVIEW_BRANCH"
            
            # PRにコメントを追加
            curl -s -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" \
              -d "{\"body\":\"✅ Preview updated with changes from branch \`$TARGET_BRANCH\` (SHA: $TARGET_SHA)\"}"
          done
